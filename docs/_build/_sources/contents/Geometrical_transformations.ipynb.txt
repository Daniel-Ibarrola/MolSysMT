{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e263d26ccded456bb3b72f2065b88465",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import molsysmt as msm\n",
    "import numpy as np\n",
    "from simtk import unit"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Geometrical transformations\n",
    "\n",
    "## Translation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.demo_systems.metenkephalin()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >form</th>        <th class=\"col_heading level0 col1\" >n_atoms</th>        <th class=\"col_heading level0 col2\" >n_groups</th>        <th class=\"col_heading level0 col3\" >n_components</th>        <th class=\"col_heading level0 col4\" >n_chains</th>        <th class=\"col_heading level0 col5\" >n_molecules</th>        <th class=\"col_heading level0 col6\" >n_entities</th>        <th class=\"col_heading level0 col7\" >n_peptides</th>        <th class=\"col_heading level0 col8\" >n_frames</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "                        <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col1\" class=\"data row0 col1\" >72</td>\n",
       "                        <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col2\" class=\"data row0 col2\" >5</td>\n",
       "                        <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col3\" class=\"data row0 col3\" >1</td>\n",
       "                        <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "                        <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col5\" class=\"data row0 col5\" >1</td>\n",
       "                        <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col6\" class=\"data row0 col6\" >1</td>\n",
       "                        <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "                        <td id=\"T_36f6ec06_ecbb_11ea_b758_e4b318d1f092row0_col8\" class=\"data row0 col8\" >1</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f25a86d3310>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[[ 0.3326  0.1548 -0.    ]\n",
      "  [ 0.3909  0.0724 -0.    ]\n",
      "  [ 0.397   0.2846 -0.    ]\n",
      "  ...\n",
      "  [ 1.8161  1.4927  0.2287]\n",
      "  [ 1.7833  1.0413 -0.    ]\n",
      "  [ 1.8356  0.9301 -0.    ]]] nm\n"
     ]
    }
   ],
   "source": [
    "coordinates = msm.get(molecular_system, coordinates=True)\n",
    "print(coordinates)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "n_atoms = msm.get(molecular_system, n_atoms=True)\n",
    "shifts = np.ones([n_atoms,3], dtype=float)*unit.nanometers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "msm.translate(molecular_system, translation=shifts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[[1.3326 1.1548 1.    ]\n",
      "  [1.3909 1.0724 1.    ]\n",
      "  [1.397  1.2846 1.    ]\n",
      "  ...\n",
      "  [2.8161 2.4927 1.2287]\n",
      "  [2.7833 2.0413 1.    ]\n",
      "  [2.8356 1.9301 1.    ]]] nm\n"
     ]
    }
   ],
   "source": [
    "coordinates = msm.get(molecular_system, coordinates=True)\n",
    "print(coordinates)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "shifts = np.array([-1.0, -1.0, -1.0], dtype=float)*unit.nanometers\n",
    "msm.translate(molecular_system, translation=shifts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[[0.3326 0.1548 0.    ]\n",
      "  [0.3909 0.0724 0.    ]\n",
      "  [0.397  0.2846 0.    ]\n",
      "  ...\n",
      "  [1.8161 1.4927 0.2287]\n",
      "  [1.7833 1.0413 0.    ]\n",
      "  [1.8356 0.9301 0.    ]]] nm\n"
     ]
    }
   ],
   "source": [
    "coordinates = msm.get(molecular_system, coordinates=True)\n",
    "print(coordinates)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "shifts = np.array([0.0, 0.0, 1.0], dtype=float)*unit.nanometers\n",
    "molecular_system_2 = msm.translate(molecular_system, translation=shifts, selection=[0,1,2],\n",
    "                                   in_place=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[[0.3326 0.1548 1.    ]\n",
      "  [0.3909 0.0724 1.    ]\n",
      "  [0.397  0.2846 1.    ]\n",
      "  ...\n",
      "  [1.8161 1.4927 0.2287]\n",
      "  [1.7833 1.0413 0.    ]\n",
      "  [1.8356 0.9301 0.    ]]] nm\n"
     ]
    }
   ],
   "source": [
    "coordinates = msm.get(molecular_system_2, coordinates=True)\n",
    "print(coordinates)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}

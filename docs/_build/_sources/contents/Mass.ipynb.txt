{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "72d3c9dfeee14242a063573cd2ef007a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import molsysmt as msm\n",
    "from simtk import unit"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# How to get chemical and physical properties "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Atoms"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Mass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "file_path = msm.demo_systems.files['1tcd.pdb']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.convert(file_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712c\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >form</th>        <th class=\"col_heading level0 col1\" >n_atoms</th>        <th class=\"col_heading level0 col2\" >n_groups</th>        <th class=\"col_heading level0 col3\" >n_components</th>        <th class=\"col_heading level0 col4\" >n_chains</th>        <th class=\"col_heading level0 col5\" >n_molecules</th>        <th class=\"col_heading level0 col6\" >n_entities</th>        <th class=\"col_heading level0 col7\" >n_waters</th>        <th class=\"col_heading level0 col8\" >n_proteins</th>        <th class=\"col_heading level0 col9\" >n_frames</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col1\" class=\"data row0 col1\" >3983</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col2\" class=\"data row0 col2\" >662</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col3\" class=\"data row0 col3\" >167</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col4\" class=\"data row0 col4\" >4</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col5\" class=\"data row0 col5\" >167</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col6\" class=\"data row0 col6\" >3</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col7\" class=\"data row0 col7\" >165</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col8\" class=\"data row0 col8\" >2</td>\n",
       "                        <td id=\"T_baeb86e0_c7e8_11ea_acc5_030c7c34712crow0_col9\" class=\"data row0 col9\" >1</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7fe4200c4a90>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "masses = msm.physchem.get_masses(molecular_system, target = 'atom', selection = 'component_index == 0')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "And"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "get_mass(item, atom_indices, forcefield=['AMBER99SB-ILDN','TIP3P'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "get_net_mass(item, atom_indices, forcefield=['AMBER99SB-ILDN','TIP3P'])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
